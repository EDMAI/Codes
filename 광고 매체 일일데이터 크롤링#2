###################################################
# 매체 크롤링 #2
###################################################
# -*- coding: utf-8 -*-
# selenium을 이용한 크롤링
# Xpath를 통한 데이터 insert
# 일일데이터 가져오기

import datetime
import errno
import re
import smtplib
import time
import urllib
import urllib.error
from urllib.request import urlopen
from bs4 import BeautifulSoup
from cffi.cffi_opcode import CLASS_NAME
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.alert import Alert
import datetime
# options = webdriver.ChromeOptions()
# options.add_argument('headless')
# options.add_argument('window-size=1920x1080')
# options.add_argument("disable-gpu")
# 
# #useragent 값 수정
# options.add_argument("user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36")

# driver=webdriver.Chrome("C:\\Program Files (x86)\\Google\\Chrome\\Application\\chromedriver.exe",chrome_options=options)
driver=webdriver.Chrome("C:\\Program Files (x86)\\Google\\Chrome\\Application\\chromedriver.exe")
driver.get("https://clix.biz.D.net/login/login.jsp")
time.sleep(3)

try : 
    driver.find_element_by_xpath("/html/body/div[3]/div/div[3]/button").click()
except :
    pass    

time.sleep(1)
driver.find_element_by_xpath("//*[@id=\"userId\"]").send_keys("id")
time.sleep(1)
driver.find_element_by_xpath("//*[@id=\"userPw\"]").send_keys("password")
time.sleep(1)



driver.find_element_by_xpath("//*[@id=\"loginForm\"]/fieldset/button").click()
time.sleep(1)


driver.get("https://clix.biz.D.net/report/top.do")
time.sleep(3)

text=driver.find_element_by_xpath("//*[@id=\"tabReportTableWrap\"]").text

text=str(text).split(sep="\n")
# print(text)

ele=[]
 
for x in text:
    ele.append(re.sub('도움말','',str(x)))
     
ele2=[]
for x in ele:
    ele2.append(x.rstrip())
    
del ele2[88]


length=int(round(len(ele2)/11))

cnt=0
날짜=[]
for x in range(0,length-1):
    날짜.append(int(round(float(ele[12+x*cnt]))))


row1=[];row2=[];row3=[];row4=[];row5=[];row6=[];row7=[]
 
 
for x in range(11,22):
    row1.append(ele2[x])
# print(row1)
for x in range(22,33):
    row2.append(ele2[x])
for x in range(33,44):
    row3.append(ele2[x])
for x in range(44,55):
    row4.append(ele2[x])
for x in range(55,66):
    row5.append(ele2[x])
for x in range(66,77):
    row6.append(ele2[x])                
for x in range(77,88):
    row7.append(ele2[x])

import pandas as pd
frame=pd.DataFrame(columns=('날짜', '노출수', '클릭수', '클릭률', '평균클릭비용', '총비용', '직접전환수', '직접전환액', '간접전환수', '간접전환액', '전환율'))
frame.loc[0]=row1
frame.loc[1]=row2
frame.loc[2]=row3
frame.loc[3]=row4
frame.loc[4]=row5
frame.loc[5]=row6
 
for x in range(0,len(frame)):
    if frame['노출수'][x]=='-':
        frame['노출수'][x]=0
    else : 
       frame['노출수'][x]=int(round(float(frame['노출수'][x])))

for x in range(0,len(frame)):
    frame['총비용'][x]=str(frame['총비용'][x]).replace(',','')
    if frame['총비용'][x]=='-':
           frame['총비용'][x]=0
    else : 
        frame['총비용'][x]=int(frame['총비용'][x])
        
for x in range(0,len(frame)):
    if frame['노출수'][x]<=30:
         frame=frame.drop(x,axis=0)         

frame=frame.reset_index(drop=True)
print(frame)      

총비용=sum(frame['총비용'])
cost_1week_avg_round=총비용/len(frame)

balance=driver.find_element_by_xpath("//*[@id=\"cSub\"]/div/span[3]/strong").text
print("잔액 :", balance)
balance=int(re.sub('점','',balance).replace(',', ''))

remainingtime_1week=balance/cost_1week_avg_round
# remainingtime_1month=balance/cost_lastmonth_avg_round #다음에는 1달 평균비용을 설정하지 않았다. 

remainingtime_1week_round=round(remainingtime_1week)
# remainingtime_1month_round=round(remainingtime_1month)

print('소진 예정일(최근7일 소진비용 기준) : %d일'% remainingtime_1week_round)
# print('남은 날짜(전월 소진비용 기준) : ', remainingtime_1month_round)

now = datetime.datetime.now()
dday=now+datetime.timedelta(days=remainingtime_1week_round)
dday_prepare=dday-datetime.timedelta(days=3)
print('종료일 : {:%Y/%m/%d}'.format(dday))
print('결제예정일 : {:%Y/%m/%d}'.format(dday_prepare))



driver.quit()

        
